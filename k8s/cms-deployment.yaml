apiVersion: v1
kind: Service
metadata:
  name: cms
spec:
  selector:
    app: cms
  ports:
    - port: 8001
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cms
  template:
    metadata:
      labels:
        app: cms
    spec:
      containers:
        - name: cms
          image: ${DOCKER_REGISTRY}/swift-logistics/cms:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              value: postgresql+asyncpg://swift:swiftpass@postgres:5432/swiftdb
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.1"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: wms
spec:
  selector:
    app: wms
  ports:
    - port: 8002
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wms
  template:
    metadata:
      labels:
        app: wms
    spec:
      containers:
        - name: wms
          image: ${DOCKER_REGISTRY}/swift-logistics/wms:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              value: postgresql+asyncpg://swift:swiftpass@postgres:5432/swiftdb
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.1"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ros
spec:
  selector:
    app: ros
  ports:
    - port: 8003
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ros
  template:
    metadata:
      labels:
        app: ros
    spec:
      containers:
        - name: ros
          image: ${DOCKER_REGISTRY}/swift-logistics/ros:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
            - name: FIRESTORE_PROJECT_ID
              value: swift-logistics-dev
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.1"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: notification
spec:
  selector:
    app: notification
  ports:
    - port: 8004
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification
  template:
    metadata:
      labels:
        app: notification
    spec:
      containers:
        - name: notification
          image: ${DOCKER_REGISTRY}/swift-logistics/notification:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
            - name: KAFKA_CONSUMER_GROUP
              value: notification-group
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.1"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: tcp-adapter
spec:
  selector:
    app: tcp-adapter
  ports:
    - port: 9000
      targetPort: 9000
      nodePort: 30900
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tcp-adapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tcp-adapter
  template:
    metadata:
      labels:
        app: tcp-adapter
    spec:
      containers:
        - name: tcp-adapter
          image: ${DOCKER_REGISTRY}/swift-logistics/tcp-adapter:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
          env:
            - name: MI_ENDPOINT
              value: http://wso2mi:8290/cms-proxy/wms_tcp_receive
          resources:
            limits:
              cpu: "0.3"
              memory: "256Mi"
            requests:
              cpu: "0.1"
              memory: "128Mi"
